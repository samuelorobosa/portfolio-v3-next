import React,{Fragment} from "react";
import Head from 'next/head';
import {BsArrowRight} from "react-icons/bs";
import Link from 'next/link';
import styles from '../styles/Home.module.scss';
import {useContext, useEffect} from "react";
import NavigationContext from "../context/NavigationContext/NavigationContext";
import {useRouter} from "next/router";
import {bottomMainData, mainData, subMainData} from "../data/Home/mainData";
import {motion} from "framer-motion";
import {container, textItem} from "../styles/animations/HomeAnimations";

export default function Home() {
    const location = useRouter().pathname
    const{dispatch} = useContext(NavigationContext);

    useEffect(()=>{
        dispatch({
            type:"CHECK_PATHNAME",
            payload: location
        })
    },[dispatch, location])



  return (
    <>
          <Head>
            <title>Samuel Amagbakhen - Frontend Developer</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico"/>
          </Head>
          <div className="flex-1 flex flex-col justify-center container mx-auto w-full mx-auto text-left md:text-center p-3">
              <motion.p variants={container} initial="hidden" animate="visible" className="text-5xl font-black font-circular-black">
                  {
                      mainData.map(({id, content, className}) => {
                          return(
                              content === 'there' ?
                              <Fragment key={id}>
                                  <motion.span variants={textItem} className={`inline-block leading-none ${styles[className]}`}>{content}&nbsp;</motion.span> <br/>
                              </Fragment>
                               :
                              <Fragment key={id}>
                                  <motion.span variants={textItem}  className={`inline-block leading-none ${styles[className]}`}>{content}&nbsp;</motion.span>
                              </Fragment>
                          )})
                  }
              </motion.p>
              <motion.p variants={container} initial="hidden" animate="visible" className="w-full md:mx-auto lg:w-1/2 mt-3 leading-10 text-xl mt-8">
                  {
                      subMainData.map(({id, content, className}) => {
                          return(
                              <Fragment key={id}>
                                  <motion.span variants={textItem} className={`h-0.5 leading-none inline-block ${className}`}>{content} </motion.span>&nbsp;
                              </Fragment>
                          )})
                  }
              </motion.p>
              <motion.p variants={container} initial="hidden" animate="visible" className="w-full md:mx-auto lg:w-1/2 mt-3 leading-10 text-xl mt-3">
                  {
                      bottomMainData.map(({id, content, className}) => {
                          return(
                              <Fragment key={id}>
                                  <motion.span variants={textItem} className="h-0.5 leading-none inline-block">{content} </motion.span>&nbsp;
                              </Fragment>
                          )})
                  }
              </motion.p>
          </div>
          <div className="mt-0 sm:mt-8 container mx-auto">
              <Link href={'/projects'}>
                  <a className={`text-2xl hover-secondary-text-color inline-block
                  font-extrabold after:content-[''] after:w-20
                  after:block after:h-0.5 after:bg-white ${styles.pv3__viewMyProjects}
                  transition duration-500 ease-in-out
                  after:transition-all after:delay-300`}>
                      View My Projects&nbsp;<BsArrowRight className={`inline ${styles.pv3__viewMyProjectsIcon}`}/>
                  </a>
              </Link>
          </div>
          <div className="mt-3 md:mt-auto mb-14 md:flex hidden justify-between items-center"></div>
          <div className="pb-24 sm:pb-0"></div>
    </>
  )
}
